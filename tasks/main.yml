---
- name: Check if cluster consist of at least 2 nodes
  fail: msg="Cluster must have at least 2 members"
  when: play_hosts|count() < 2
  run_once: true

- name: Include distribution version specific variables
  include_vars: "el{{ ansible_distribution_major_version }}.yml"

- name: Install libselinux-python to work with SELinux setting
  yum: name=libselinux-python state=installed

# WARNING: the 'ansible_fqdn' is resolved from /etc/hosts file! If you change hostname
# of machine through /etc/hosts the ansible will pick it up and use it!
- name: Add hosts to /etc/hosts
  lineinfile:
  args:
    dest: '/etc/hosts'
    regexp: "{{ hostvars[item]['ansible_default_ipv4']['address'] }} "
    line: "{{ hostvars[item]['ansible_default_ipv4']['address'] }} {{ hostvars[item]['ansible_fqdn'].split('.')[0] }}"
  with_items: "{{ play_hosts }}"

- name: Create /etc/cluster directory
  file: path=/etc/cluster state=directory

- name: Install Pacemaker cluster packages to all nodes
  yum: name={{ item }} state=installed
  with_items: 
    - "{{ pacemaker_packages }}"

- name: Create cluster system group
  group: name={{ cluster_group }} state=present
- name: Create cluster system user
  user: 
    name={{ cluster_user }} state=present
    password={{ cluster_user_pass | password_hash('sha512', ansible_hostname) }}

- name: Enable and start PCSD service
  service: name=pcsd enabled=yes state=started

- name: Setup firewall for RHEL/CentOS 6 systems (iptables)
  include: firewall-el6.yml
  when: ansible_distribution_major_version == "6" and cluster_firewall == true

- name: Setup firewall for RHEL/CentOS 7 systems (firewalld)
  include: firewall-el7.yml
  when: ansible_distribution_major_version == "7" and cluster_firewall == true

- name: Authorize cluster nodes
  pcs_auth: node_name={{ hostvars[item]['ansible_fqdn'].split('.')[0] }} username={{ cluster_user }} password={{ cluster_user_pass }}
  with_items: '{{ play_hosts }}'

- name: Setup cluster
  pcs_cluster: node_list="{% for item in play_hosts %}{{ hostvars[item]['ansible_hostname'] }} {% endfor %}" cluster_name="{{ cluster_name }}"
  run_once: true

- name: Start cluster services on all nodes
  service: name={{ item }} state=started
  with_items:
    - pacemaker 
    - corosync

- name: Enable cluster services on boot
  service: name={{ item }} enabled=yes
  when: cluster_enable_service == true
  with_items:
    - pacemaker 
    - corosync

### fencing setup
- name: Setup automatic fence_xvm
  include: fence_xvm.yml
  when: cluster_configure_fence_xvm is defined and cluster_configure_fence_xvm == true

- name: Setup custom fence devices
  include: fence_custom.yml
